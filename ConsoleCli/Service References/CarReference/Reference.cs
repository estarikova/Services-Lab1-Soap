//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleCli.CarReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarReference.ICarDelivery")]
    public interface ICarDelivery {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/TestConnection", ReplyAction="http://tempuri.org/ICarDelivery/TestConnectionResponse")]
        string TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/TestConnection", ReplyAction="http://tempuri.org/ICarDelivery/TestConnectionResponse")]
        System.Threading.Tasks.Task<string> TestConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/AddData", ReplyAction="http://tempuri.org/ICarDelivery/AddDataResponse")]
        string AddData(string mark, int age, int price, int motorValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/AddData", ReplyAction="http://tempuri.org/ICarDelivery/AddDataResponse")]
        System.Threading.Tasks.Task<string> AddDataAsync(string mark, int age, int price, int motorValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/PrintOrder", ReplyAction="http://tempuri.org/ICarDelivery/PrintOrderResponse")]
        string PrintOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/PrintOrder", ReplyAction="http://tempuri.org/ICarDelivery/PrintOrderResponse")]
        System.Threading.Tasks.Task<string> PrintOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/PrintAllOrders", ReplyAction="http://tempuri.org/ICarDelivery/PrintAllOrdersResponse")]
        string PrintAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarDelivery/PrintAllOrders", ReplyAction="http://tempuri.org/ICarDelivery/PrintAllOrdersResponse")]
        System.Threading.Tasks.Task<string> PrintAllOrdersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarDeliveryChannel : ConsoleCli.CarReference.ICarDelivery, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarDeliveryClient : System.ServiceModel.ClientBase<ConsoleCli.CarReference.ICarDelivery>, ConsoleCli.CarReference.ICarDelivery {
        
        public CarDeliveryClient() {
        }
        
        public CarDeliveryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarDeliveryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarDeliveryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarDeliveryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TestConnection() {
            return base.Channel.TestConnection();
        }
        
        public System.Threading.Tasks.Task<string> TestConnectionAsync() {
            return base.Channel.TestConnectionAsync();
        }
        
        public string AddData(string mark, int age, int price, int motorValue) {
            return base.Channel.AddData(mark, age, price, motorValue);
        }
        
        public System.Threading.Tasks.Task<string> AddDataAsync(string mark, int age, int price, int motorValue) {
            return base.Channel.AddDataAsync(mark, age, price, motorValue);
        }
        
        public string PrintOrder(int id) {
            return base.Channel.PrintOrder(id);
        }
        
        public System.Threading.Tasks.Task<string> PrintOrderAsync(int id) {
            return base.Channel.PrintOrderAsync(id);
        }
        
        public string PrintAllOrders() {
            return base.Channel.PrintAllOrders();
        }
        
        public System.Threading.Tasks.Task<string> PrintAllOrdersAsync() {
            return base.Channel.PrintAllOrdersAsync();
        }
    }
}
